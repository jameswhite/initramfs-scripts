#!/bin/sh
# Example boot script

PREREQ="mdadm" 

prereqs(){         
    echo "$PREREQ" 
}

. /scripts/functions

case $1 in 
    prereqs)
        prereqs
        exit 0
    ;; 
esac
# Begin real processing below this line 
################################################################################
# module args
mod_args=$(dmesg | grep "cs5535_gpio:" | sed -e 's/.*cs5535_gpio: //')
if [ ! -z "${mod_args}" ]; then
    major=$(echo ${mod_args} | sed -e 's/.*major=//')
    modprobe cs5535_gpio $mod_args
    if [ ! -z "${major}" ]; then 
        # mknod
        if [ -c /dev/error_led ];then
            if [ "$(stat -c "%F %t %T" /dev/error_led)" != "character special file fc 6" ];then
                /bin/rm /dev/error_led
                mknod /dev/error_led c ${major} 6
            fi
        else
            mknod /dev/error_led c ${major} 6
        fi
    else
        echo -e  "\nCould not get major number for /dev/error_led\n";
    fi
else
    echo -e  "\nCould not get module arguments for cs5535_gpio:\n";
fi
################################################################################
/scripts/flash_error &
################################################################################
# wait for the USB Key
log_begin_msg "Starting root-on-crypt"
/sbin/modprobe usb-storage
while [ ! -b /dev/sdb ];do 
    echo "Waiting for USB Key.";
    echo 2 > /tmp/current_error_level
    sleep 1 ; 
done
echo 0 > /dev/error_led
################################################################################
# wait until it mounts
if [ ! -d /cryptkeys/boot ]; then mkdir -p /cryptkeys/boot; fi
while [ ! -f /cryptkeys/boot/crypttab ]; do
    /bin/mount -t ext2 /dev/sdb1 /cryptkeys/boot || echo "could not read /cryptkeys/boot/crypttab"
done
################################################################################
# decrypt the compact flash
/sbin/modprobe dm_mod
/bin/cat /cryptkeys/boot/crypttab | \
awk '{print "cryptsetup --key-file /cryptkeys"$3" luksOpen "$2" "$1}'| \
    while read READY_DEVICE ; do
            echo "${READY_DEVICE}"
            ${READY_DEVICE}
        done
FORCE_SECURE=0;
if [ -f "/cryptkeys/boot/force_secure" ]; then
    FORCE_SECURE=1;
fi

if [ -f /cryptkeys/boot/wifi_credentials ]; then
    /bin/cp /cryptkeys/boot/wifi_credentials /dev/shm/wifi_credentials
fi

/bin/umount /cryptkeys/boot
################################################################################
# wait until it's removed
if [ ${FORCE_SECURE} -eq 1 ];then
    while [ -b /dev/sdb ];do 
        echo 3 > /tmp/current_error_level
        echo "Waiting for USB Key Removal.";
        sleep 1 ; 
    done
fi
echo 0 > /dev/error_led
################################################################################
echo 0 > /tmp/current_error_level
exit 0
